// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: block.proto

#ifndef PROTOBUF_block_2eproto__INCLUDED
#define PROTOBUF_block_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "commands.pb.h"
#include "primitive.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_block_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsHeaderImpl();
void InitDefaultsHeader();
void InitDefaultsTransaction_PayloadImpl();
void InitDefaultsTransaction_Payload();
void InitDefaultsTransactionImpl();
void InitDefaultsTransaction();
void InitDefaultsBlock_PayloadImpl();
void InitDefaultsBlock_Payload();
void InitDefaultsBlockImpl();
void InitDefaultsBlock();
inline void InitDefaults() {
  InitDefaultsHeader();
  InitDefaultsTransaction_Payload();
  InitDefaultsTransaction();
  InitDefaultsBlock_Payload();
  InitDefaultsBlock();
}
}  // namespace protobuf_block_2eproto
namespace iroha {
namespace protocol {
class Block;
class BlockDefaultTypeInternal;
extern BlockDefaultTypeInternal _Block_default_instance_;
class Block_Payload;
class Block_PayloadDefaultTypeInternal;
extern Block_PayloadDefaultTypeInternal _Block_Payload_default_instance_;
class Header;
class HeaderDefaultTypeInternal;
extern HeaderDefaultTypeInternal _Header_default_instance_;
class Transaction;
class TransactionDefaultTypeInternal;
extern TransactionDefaultTypeInternal _Transaction_default_instance_;
class Transaction_Payload;
class Transaction_PayloadDefaultTypeInternal;
extern Transaction_PayloadDefaultTypeInternal _Transaction_Payload_default_instance_;
}  // namespace protocol
}  // namespace iroha
namespace iroha {
namespace protocol {

// ===================================================================

class Header : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iroha.protocol.Header) */ {
 public:
  Header();
  virtual ~Header();

  Header(const Header& from);

  inline Header& operator=(const Header& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Header(Header&& from) noexcept
    : Header() {
    *this = ::std::move(from);
  }

  inline Header& operator=(Header&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Header& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Header* internal_default_instance() {
    return reinterpret_cast<const Header*>(
               &_Header_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Header* other);
  friend void swap(Header& a, Header& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Header* New() const PROTOBUF_FINAL { return New(NULL); }

  Header* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Header& from);
  void MergeFrom(const Header& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Header* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .iroha.protocol.Signature signatures = 2;
  int signatures_size() const;
  void clear_signatures();
  static const int kSignaturesFieldNumber = 2;
  const ::iroha::protocol::Signature& signatures(int index) const;
  ::iroha::protocol::Signature* mutable_signatures(int index);
  ::iroha::protocol::Signature* add_signatures();
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >*
      mutable_signatures();
  const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >&
      signatures() const;

  // uint64 created_time = 1;
  void clear_created_time();
  static const int kCreatedTimeFieldNumber = 1;
  ::google::protobuf::uint64 created_time() const;
  void set_created_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:iroha.protocol.Header)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature > signatures_;
  ::google::protobuf::uint64 created_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_block_2eproto::TableStruct;
  friend void ::protobuf_block_2eproto::InitDefaultsHeaderImpl();
};
// -------------------------------------------------------------------

class Transaction_Payload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iroha.protocol.Transaction.Payload) */ {
 public:
  Transaction_Payload();
  virtual ~Transaction_Payload();

  Transaction_Payload(const Transaction_Payload& from);

  inline Transaction_Payload& operator=(const Transaction_Payload& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transaction_Payload(Transaction_Payload&& from) noexcept
    : Transaction_Payload() {
    *this = ::std::move(from);
  }

  inline Transaction_Payload& operator=(Transaction_Payload&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transaction_Payload& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transaction_Payload* internal_default_instance() {
    return reinterpret_cast<const Transaction_Payload*>(
               &_Transaction_Payload_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Transaction_Payload* other);
  friend void swap(Transaction_Payload& a, Transaction_Payload& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transaction_Payload* New() const PROTOBUF_FINAL { return New(NULL); }

  Transaction_Payload* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Transaction_Payload& from);
  void MergeFrom(const Transaction_Payload& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Transaction_Payload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .iroha.protocol.Command commands = 1;
  int commands_size() const;
  void clear_commands();
  static const int kCommandsFieldNumber = 1;
  const ::iroha::protocol::Command& commands(int index) const;
  ::iroha::protocol::Command* mutable_commands(int index);
  ::iroha::protocol::Command* add_commands();
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Command >*
      mutable_commands();
  const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Command >&
      commands() const;

  // string creator_account_id = 2;
  void clear_creator_account_id();
  static const int kCreatorAccountIdFieldNumber = 2;
  const ::std::string& creator_account_id() const;
  void set_creator_account_id(const ::std::string& value);
  #if LANG_CXX11
  void set_creator_account_id(::std::string&& value);
  #endif
  void set_creator_account_id(const char* value);
  void set_creator_account_id(const char* value, size_t size);
  ::std::string* mutable_creator_account_id();
  ::std::string* release_creator_account_id();
  void set_allocated_creator_account_id(::std::string* creator_account_id);

  // uint64 created_time = 3;
  void clear_created_time();
  static const int kCreatedTimeFieldNumber = 3;
  ::google::protobuf::uint64 created_time() const;
  void set_created_time(::google::protobuf::uint64 value);

  // uint32 quorum = 4;
  void clear_quorum();
  static const int kQuorumFieldNumber = 4;
  ::google::protobuf::uint32 quorum() const;
  void set_quorum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:iroha.protocol.Transaction.Payload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Command > commands_;
  ::google::protobuf::internal::ArenaStringPtr creator_account_id_;
  ::google::protobuf::uint64 created_time_;
  ::google::protobuf::uint32 quorum_;
  mutable int _cached_size_;
  friend struct ::protobuf_block_2eproto::TableStruct;
  friend void ::protobuf_block_2eproto::InitDefaultsTransaction_PayloadImpl();
};
// -------------------------------------------------------------------

class Transaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iroha.protocol.Transaction) */ {
 public:
  Transaction();
  virtual ~Transaction();

  Transaction(const Transaction& from);

  inline Transaction& operator=(const Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Transaction(Transaction&& from) noexcept
    : Transaction() {
    *this = ::std::move(from);
  }

  inline Transaction& operator=(Transaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Transaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Transaction* internal_default_instance() {
    return reinterpret_cast<const Transaction*>(
               &_Transaction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Transaction* other);
  friend void swap(Transaction& a, Transaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Transaction* New() const PROTOBUF_FINAL { return New(NULL); }

  Transaction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Transaction& from);
  void MergeFrom(const Transaction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Transaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Transaction_Payload Payload;

  // accessors -------------------------------------------------------

  // repeated .iroha.protocol.Signature signatures = 2;
  int signatures_size() const;
  void clear_signatures();
  static const int kSignaturesFieldNumber = 2;
  const ::iroha::protocol::Signature& signatures(int index) const;
  ::iroha::protocol::Signature* mutable_signatures(int index);
  ::iroha::protocol::Signature* add_signatures();
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >*
      mutable_signatures();
  const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >&
      signatures() const;

  // .iroha.protocol.Transaction.Payload payload = 1;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::iroha::protocol::Transaction_Payload& payload() const;
  ::iroha::protocol::Transaction_Payload* release_payload();
  ::iroha::protocol::Transaction_Payload* mutable_payload();
  void set_allocated_payload(::iroha::protocol::Transaction_Payload* payload);

  // @@protoc_insertion_point(class_scope:iroha.protocol.Transaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature > signatures_;
  ::iroha::protocol::Transaction_Payload* payload_;
  mutable int _cached_size_;
  friend struct ::protobuf_block_2eproto::TableStruct;
  friend void ::protobuf_block_2eproto::InitDefaultsTransactionImpl();
};
// -------------------------------------------------------------------

class Block_Payload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iroha.protocol.Block.Payload) */ {
 public:
  Block_Payload();
  virtual ~Block_Payload();

  Block_Payload(const Block_Payload& from);

  inline Block_Payload& operator=(const Block_Payload& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Block_Payload(Block_Payload&& from) noexcept
    : Block_Payload() {
    *this = ::std::move(from);
  }

  inline Block_Payload& operator=(Block_Payload&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Block_Payload& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Block_Payload* internal_default_instance() {
    return reinterpret_cast<const Block_Payload*>(
               &_Block_Payload_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Block_Payload* other);
  friend void swap(Block_Payload& a, Block_Payload& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Block_Payload* New() const PROTOBUF_FINAL { return New(NULL); }

  Block_Payload* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Block_Payload& from);
  void MergeFrom(const Block_Payload& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Block_Payload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .iroha.protocol.Transaction transactions = 1;
  int transactions_size() const;
  void clear_transactions();
  static const int kTransactionsFieldNumber = 1;
  const ::iroha::protocol::Transaction& transactions(int index) const;
  ::iroha::protocol::Transaction* mutable_transactions(int index);
  ::iroha::protocol::Transaction* add_transactions();
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >*
      mutable_transactions();
  const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >&
      transactions() const;

  // bytes prev_block_hash = 5;
  void clear_prev_block_hash();
  static const int kPrevBlockHashFieldNumber = 5;
  const ::std::string& prev_block_hash() const;
  void set_prev_block_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_block_hash(::std::string&& value);
  #endif
  void set_prev_block_hash(const char* value);
  void set_prev_block_hash(const void* value, size_t size);
  ::std::string* mutable_prev_block_hash();
  ::std::string* release_prev_block_hash();
  void set_allocated_prev_block_hash(::std::string* prev_block_hash);

  // uint64 height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::uint64 height() const;
  void set_height(::google::protobuf::uint64 value);

  // uint64 created_time = 6;
  void clear_created_time();
  static const int kCreatedTimeFieldNumber = 6;
  ::google::protobuf::uint64 created_time() const;
  void set_created_time(::google::protobuf::uint64 value);

  // uint32 tx_number = 2;
  void clear_tx_number();
  static const int kTxNumberFieldNumber = 2;
  ::google::protobuf::uint32 tx_number() const;
  void set_tx_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:iroha.protocol.Block.Payload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction > transactions_;
  ::google::protobuf::internal::ArenaStringPtr prev_block_hash_;
  ::google::protobuf::uint64 height_;
  ::google::protobuf::uint64 created_time_;
  ::google::protobuf::uint32 tx_number_;
  mutable int _cached_size_;
  friend struct ::protobuf_block_2eproto::TableStruct;
  friend void ::protobuf_block_2eproto::InitDefaultsBlock_PayloadImpl();
};
// -------------------------------------------------------------------

class Block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iroha.protocol.Block) */ {
 public:
  Block();
  virtual ~Block();

  Block(const Block& from);

  inline Block& operator=(const Block& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Block(Block&& from) noexcept
    : Block() {
    *this = ::std::move(from);
  }

  inline Block& operator=(Block&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Block& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Block* internal_default_instance() {
    return reinterpret_cast<const Block*>(
               &_Block_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Block* other);
  friend void swap(Block& a, Block& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Block* New() const PROTOBUF_FINAL { return New(NULL); }

  Block* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Block& from);
  void MergeFrom(const Block& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Block_Payload Payload;

  // accessors -------------------------------------------------------

  // repeated .iroha.protocol.Signature signatures = 2;
  int signatures_size() const;
  void clear_signatures();
  static const int kSignaturesFieldNumber = 2;
  const ::iroha::protocol::Signature& signatures(int index) const;
  ::iroha::protocol::Signature* mutable_signatures(int index);
  ::iroha::protocol::Signature* add_signatures();
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >*
      mutable_signatures();
  const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >&
      signatures() const;

  // .iroha.protocol.Block.Payload payload = 1;
  bool has_payload() const;
  void clear_payload();
  static const int kPayloadFieldNumber = 1;
  const ::iroha::protocol::Block_Payload& payload() const;
  ::iroha::protocol::Block_Payload* release_payload();
  ::iroha::protocol::Block_Payload* mutable_payload();
  void set_allocated_payload(::iroha::protocol::Block_Payload* payload);

  // @@protoc_insertion_point(class_scope:iroha.protocol.Block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature > signatures_;
  ::iroha::protocol::Block_Payload* payload_;
  mutable int _cached_size_;
  friend struct ::protobuf_block_2eproto::TableStruct;
  friend void ::protobuf_block_2eproto::InitDefaultsBlockImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Header

// uint64 created_time = 1;
inline void Header::clear_created_time() {
  created_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Header::created_time() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Header.created_time)
  return created_time_;
}
inline void Header::set_created_time(::google::protobuf::uint64 value) {
  
  created_time_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Header.created_time)
}

// repeated .iroha.protocol.Signature signatures = 2;
inline int Header::signatures_size() const {
  return signatures_.size();
}
inline const ::iroha::protocol::Signature& Header::signatures(int index) const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Header.signatures)
  return signatures_.Get(index);
}
inline ::iroha::protocol::Signature* Header::mutable_signatures(int index) {
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Header.signatures)
  return signatures_.Mutable(index);
}
inline ::iroha::protocol::Signature* Header::add_signatures() {
  // @@protoc_insertion_point(field_add:iroha.protocol.Header.signatures)
  return signatures_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >*
Header::mutable_signatures() {
  // @@protoc_insertion_point(field_mutable_list:iroha.protocol.Header.signatures)
  return &signatures_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >&
Header::signatures() const {
  // @@protoc_insertion_point(field_list:iroha.protocol.Header.signatures)
  return signatures_;
}

// -------------------------------------------------------------------

// Transaction_Payload

// repeated .iroha.protocol.Command commands = 1;
inline int Transaction_Payload::commands_size() const {
  return commands_.size();
}
inline const ::iroha::protocol::Command& Transaction_Payload::commands(int index) const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Transaction.Payload.commands)
  return commands_.Get(index);
}
inline ::iroha::protocol::Command* Transaction_Payload::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Transaction.Payload.commands)
  return commands_.Mutable(index);
}
inline ::iroha::protocol::Command* Transaction_Payload::add_commands() {
  // @@protoc_insertion_point(field_add:iroha.protocol.Transaction.Payload.commands)
  return commands_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Command >*
Transaction_Payload::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:iroha.protocol.Transaction.Payload.commands)
  return &commands_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Command >&
Transaction_Payload::commands() const {
  // @@protoc_insertion_point(field_list:iroha.protocol.Transaction.Payload.commands)
  return commands_;
}

// string creator_account_id = 2;
inline void Transaction_Payload::clear_creator_account_id() {
  creator_account_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Transaction_Payload::creator_account_id() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Transaction.Payload.creator_account_id)
  return creator_account_id_.GetNoArena();
}
inline void Transaction_Payload::set_creator_account_id(const ::std::string& value) {
  
  creator_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:iroha.protocol.Transaction.Payload.creator_account_id)
}
#if LANG_CXX11
inline void Transaction_Payload::set_creator_account_id(::std::string&& value) {
  
  creator_account_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:iroha.protocol.Transaction.Payload.creator_account_id)
}
#endif
inline void Transaction_Payload::set_creator_account_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  creator_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:iroha.protocol.Transaction.Payload.creator_account_id)
}
inline void Transaction_Payload::set_creator_account_id(const char* value, size_t size) {
  
  creator_account_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:iroha.protocol.Transaction.Payload.creator_account_id)
}
inline ::std::string* Transaction_Payload::mutable_creator_account_id() {
  
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Transaction.Payload.creator_account_id)
  return creator_account_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Transaction_Payload::release_creator_account_id() {
  // @@protoc_insertion_point(field_release:iroha.protocol.Transaction.Payload.creator_account_id)
  
  return creator_account_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Transaction_Payload::set_allocated_creator_account_id(::std::string* creator_account_id) {
  if (creator_account_id != NULL) {
    
  } else {
    
  }
  creator_account_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator_account_id);
  // @@protoc_insertion_point(field_set_allocated:iroha.protocol.Transaction.Payload.creator_account_id)
}

// uint64 created_time = 3;
inline void Transaction_Payload::clear_created_time() {
  created_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Transaction_Payload::created_time() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Transaction.Payload.created_time)
  return created_time_;
}
inline void Transaction_Payload::set_created_time(::google::protobuf::uint64 value) {
  
  created_time_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Transaction.Payload.created_time)
}

// uint32 quorum = 4;
inline void Transaction_Payload::clear_quorum() {
  quorum_ = 0u;
}
inline ::google::protobuf::uint32 Transaction_Payload::quorum() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Transaction.Payload.quorum)
  return quorum_;
}
inline void Transaction_Payload::set_quorum(::google::protobuf::uint32 value) {
  
  quorum_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Transaction.Payload.quorum)
}

// -------------------------------------------------------------------

// Transaction

// .iroha.protocol.Transaction.Payload payload = 1;
inline bool Transaction::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline void Transaction::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
}
inline const ::iroha::protocol::Transaction_Payload& Transaction::payload() const {
  const ::iroha::protocol::Transaction_Payload* p = payload_;
  // @@protoc_insertion_point(field_get:iroha.protocol.Transaction.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::iroha::protocol::Transaction_Payload*>(
      &::iroha::protocol::_Transaction_Payload_default_instance_);
}
inline ::iroha::protocol::Transaction_Payload* Transaction::release_payload() {
  // @@protoc_insertion_point(field_release:iroha.protocol.Transaction.payload)
  
  ::iroha::protocol::Transaction_Payload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::iroha::protocol::Transaction_Payload* Transaction::mutable_payload() {
  
  if (payload_ == NULL) {
    payload_ = new ::iroha::protocol::Transaction_Payload;
  }
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Transaction.payload)
  return payload_;
}
inline void Transaction::set_allocated_payload(::iroha::protocol::Transaction_Payload* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete payload_;
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:iroha.protocol.Transaction.payload)
}

// repeated .iroha.protocol.Signature signatures = 2;
inline int Transaction::signatures_size() const {
  return signatures_.size();
}
inline const ::iroha::protocol::Signature& Transaction::signatures(int index) const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Transaction.signatures)
  return signatures_.Get(index);
}
inline ::iroha::protocol::Signature* Transaction::mutable_signatures(int index) {
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Transaction.signatures)
  return signatures_.Mutable(index);
}
inline ::iroha::protocol::Signature* Transaction::add_signatures() {
  // @@protoc_insertion_point(field_add:iroha.protocol.Transaction.signatures)
  return signatures_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >*
Transaction::mutable_signatures() {
  // @@protoc_insertion_point(field_mutable_list:iroha.protocol.Transaction.signatures)
  return &signatures_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >&
Transaction::signatures() const {
  // @@protoc_insertion_point(field_list:iroha.protocol.Transaction.signatures)
  return signatures_;
}

// -------------------------------------------------------------------

// Block_Payload

// repeated .iroha.protocol.Transaction transactions = 1;
inline int Block_Payload::transactions_size() const {
  return transactions_.size();
}
inline void Block_Payload::clear_transactions() {
  transactions_.Clear();
}
inline const ::iroha::protocol::Transaction& Block_Payload::transactions(int index) const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Block.Payload.transactions)
  return transactions_.Get(index);
}
inline ::iroha::protocol::Transaction* Block_Payload::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Block.Payload.transactions)
  return transactions_.Mutable(index);
}
inline ::iroha::protocol::Transaction* Block_Payload::add_transactions() {
  // @@protoc_insertion_point(field_add:iroha.protocol.Block.Payload.transactions)
  return transactions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >*
Block_Payload::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:iroha.protocol.Block.Payload.transactions)
  return &transactions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >&
Block_Payload::transactions() const {
  // @@protoc_insertion_point(field_list:iroha.protocol.Block.Payload.transactions)
  return transactions_;
}

// uint32 tx_number = 2;
inline void Block_Payload::clear_tx_number() {
  tx_number_ = 0u;
}
inline ::google::protobuf::uint32 Block_Payload::tx_number() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Block.Payload.tx_number)
  return tx_number_;
}
inline void Block_Payload::set_tx_number(::google::protobuf::uint32 value) {
  
  tx_number_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Block.Payload.tx_number)
}

// uint64 height = 3;
inline void Block_Payload::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Block_Payload::height() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Block.Payload.height)
  return height_;
}
inline void Block_Payload::set_height(::google::protobuf::uint64 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Block.Payload.height)
}

// bytes prev_block_hash = 5;
inline void Block_Payload::clear_prev_block_hash() {
  prev_block_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Block_Payload::prev_block_hash() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Block.Payload.prev_block_hash)
  return prev_block_hash_.GetNoArena();
}
inline void Block_Payload::set_prev_block_hash(const ::std::string& value) {
  
  prev_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:iroha.protocol.Block.Payload.prev_block_hash)
}
#if LANG_CXX11
inline void Block_Payload::set_prev_block_hash(::std::string&& value) {
  
  prev_block_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:iroha.protocol.Block.Payload.prev_block_hash)
}
#endif
inline void Block_Payload::set_prev_block_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:iroha.protocol.Block.Payload.prev_block_hash)
}
inline void Block_Payload::set_prev_block_hash(const void* value, size_t size) {
  
  prev_block_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:iroha.protocol.Block.Payload.prev_block_hash)
}
inline ::std::string* Block_Payload::mutable_prev_block_hash() {
  
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Block.Payload.prev_block_hash)
  return prev_block_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Block_Payload::release_prev_block_hash() {
  // @@protoc_insertion_point(field_release:iroha.protocol.Block.Payload.prev_block_hash)
  
  return prev_block_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Block_Payload::set_allocated_prev_block_hash(::std::string* prev_block_hash) {
  if (prev_block_hash != NULL) {
    
  } else {
    
  }
  prev_block_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_block_hash);
  // @@protoc_insertion_point(field_set_allocated:iroha.protocol.Block.Payload.prev_block_hash)
}

// uint64 created_time = 6;
inline void Block_Payload::clear_created_time() {
  created_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Block_Payload::created_time() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Block.Payload.created_time)
  return created_time_;
}
inline void Block_Payload::set_created_time(::google::protobuf::uint64 value) {
  
  created_time_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Block.Payload.created_time)
}

// -------------------------------------------------------------------

// Block

// .iroha.protocol.Block.Payload payload = 1;
inline bool Block::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
inline void Block::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) {
    delete payload_;
  }
  payload_ = NULL;
}
inline const ::iroha::protocol::Block_Payload& Block::payload() const {
  const ::iroha::protocol::Block_Payload* p = payload_;
  // @@protoc_insertion_point(field_get:iroha.protocol.Block.payload)
  return p != NULL ? *p : *reinterpret_cast<const ::iroha::protocol::Block_Payload*>(
      &::iroha::protocol::_Block_Payload_default_instance_);
}
inline ::iroha::protocol::Block_Payload* Block::release_payload() {
  // @@protoc_insertion_point(field_release:iroha.protocol.Block.payload)
  
  ::iroha::protocol::Block_Payload* temp = payload_;
  payload_ = NULL;
  return temp;
}
inline ::iroha::protocol::Block_Payload* Block::mutable_payload() {
  
  if (payload_ == NULL) {
    payload_ = new ::iroha::protocol::Block_Payload;
  }
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Block.payload)
  return payload_;
}
inline void Block::set_allocated_payload(::iroha::protocol::Block_Payload* payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete payload_;
  }
  if (payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, payload, submessage_arena);
    }
    
  } else {
    
  }
  payload_ = payload;
  // @@protoc_insertion_point(field_set_allocated:iroha.protocol.Block.payload)
}

// repeated .iroha.protocol.Signature signatures = 2;
inline int Block::signatures_size() const {
  return signatures_.size();
}
inline const ::iroha::protocol::Signature& Block::signatures(int index) const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Block.signatures)
  return signatures_.Get(index);
}
inline ::iroha::protocol::Signature* Block::mutable_signatures(int index) {
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Block.signatures)
  return signatures_.Mutable(index);
}
inline ::iroha::protocol::Signature* Block::add_signatures() {
  // @@protoc_insertion_point(field_add:iroha.protocol.Block.signatures)
  return signatures_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >*
Block::mutable_signatures() {
  // @@protoc_insertion_point(field_mutable_list:iroha.protocol.Block.signatures)
  return &signatures_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Signature >&
Block::signatures() const {
  // @@protoc_insertion_point(field_list:iroha.protocol.Block.signatures)
  return signatures_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace iroha

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_block_2eproto__INCLUDED
