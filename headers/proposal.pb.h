// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proposal.proto

#ifndef PROTOBUF_proposal_2eproto__INCLUDED
#define PROTOBUF_proposal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "block.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_proposal_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsProposalImpl();
void InitDefaultsProposal();
inline void InitDefaults() {
  InitDefaultsProposal();
}
}  // namespace protobuf_proposal_2eproto
namespace iroha {
namespace protocol {
class Proposal;
class ProposalDefaultTypeInternal;
extern ProposalDefaultTypeInternal _Proposal_default_instance_;
}  // namespace protocol
}  // namespace iroha
namespace iroha {
namespace protocol {

// ===================================================================

class Proposal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iroha.protocol.Proposal) */ {
 public:
  Proposal();
  virtual ~Proposal();

  Proposal(const Proposal& from);

  inline Proposal& operator=(const Proposal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Proposal(Proposal&& from) noexcept
    : Proposal() {
    *this = ::std::move(from);
  }

  inline Proposal& operator=(Proposal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proposal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Proposal* internal_default_instance() {
    return reinterpret_cast<const Proposal*>(
               &_Proposal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Proposal* other);
  friend void swap(Proposal& a, Proposal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Proposal* New() const PROTOBUF_FINAL { return New(NULL); }

  Proposal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Proposal& from);
  void MergeFrom(const Proposal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Proposal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .iroha.protocol.Transaction transactions = 2;
  int transactions_size() const;
  void clear_transactions();
  static const int kTransactionsFieldNumber = 2;
  const ::iroha::protocol::Transaction& transactions(int index) const;
  ::iroha::protocol::Transaction* mutable_transactions(int index);
  ::iroha::protocol::Transaction* add_transactions();
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >*
      mutable_transactions();
  const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >&
      transactions() const;

  // uint64 height = 1;
  void clear_height();
  static const int kHeightFieldNumber = 1;
  ::google::protobuf::uint64 height() const;
  void set_height(::google::protobuf::uint64 value);

  // uint64 created_time = 3;
  void clear_created_time();
  static const int kCreatedTimeFieldNumber = 3;
  ::google::protobuf::uint64 created_time() const;
  void set_created_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:iroha.protocol.Proposal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction > transactions_;
  ::google::protobuf::uint64 height_;
  ::google::protobuf::uint64 created_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_proposal_2eproto::TableStruct;
  friend void ::protobuf_proposal_2eproto::InitDefaultsProposalImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Proposal

// uint64 height = 1;
inline void Proposal::clear_height() {
  height_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Proposal::height() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Proposal.height)
  return height_;
}
inline void Proposal::set_height(::google::protobuf::uint64 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Proposal.height)
}

// repeated .iroha.protocol.Transaction transactions = 2;
inline int Proposal::transactions_size() const {
  return transactions_.size();
}
inline const ::iroha::protocol::Transaction& Proposal::transactions(int index) const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Proposal.transactions)
  return transactions_.Get(index);
}
inline ::iroha::protocol::Transaction* Proposal::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:iroha.protocol.Proposal.transactions)
  return transactions_.Mutable(index);
}
inline ::iroha::protocol::Transaction* Proposal::add_transactions() {
  // @@protoc_insertion_point(field_add:iroha.protocol.Proposal.transactions)
  return transactions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >*
Proposal::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:iroha.protocol.Proposal.transactions)
  return &transactions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iroha::protocol::Transaction >&
Proposal::transactions() const {
  // @@protoc_insertion_point(field_list:iroha.protocol.Proposal.transactions)
  return transactions_;
}

// uint64 created_time = 3;
inline void Proposal::clear_created_time() {
  created_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Proposal::created_time() const {
  // @@protoc_insertion_point(field_get:iroha.protocol.Proposal.created_time)
  return created_time_;
}
inline void Proposal::set_created_time(::google::protobuf::uint64 value) {
  
  created_time_ = value;
  // @@protoc_insertion_point(field_set:iroha.protocol.Proposal.created_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace iroha

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proposal_2eproto__INCLUDED
